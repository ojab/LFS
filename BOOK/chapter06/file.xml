<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-file" role="wrap">
  <?dbhtml filename="file.html"?>

  <sect1info condition="script">
    <productname>file</productname>
    <productnumber>&file-version;</productnumber>
    <address>&file-url;</address>
  </sect1info>

  <title>File-&file-version;</title>

  <indexterm zone="ch-tools-file">
    <primary sortas="a-File">File</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../chapter08/file.xml"
    xpointer="xpointer(/sect1/sect2[1]/para[1])"/>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&file-tmp-sbu;</seg>
        <seg>&file-tmp-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of File</title>

    <para>
       The <command>file</command> command on the build host needs 
       to be same version as the one we are building in order to 
       create the signature file. Run the following commands to build it:
    </para>

<screen><userinput remap="pre">mkdir build
pushd build
  ../configure --disable-bzlib      \
               --disable-libseccomp \
               --disable-xzlib      \
               --disable-zlib
  make
popd</userinput></screen>

    <variablelist>
      <title>The meaning of the new configure option:</title>

      <varlistentry>
        <term><parameter>--disable-*</parameter></term>
        <listitem>
          <para>The configuration script attempts to use some packages from
          the host distribution if the corresponding library files exist.
          It may cause compilation failure if a library file exists, but
          the corresponding header files do not.  These options prevent
          using these unneeded capabilities from the host.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Prepare File for compilation:</para>

<screen><userinput remap="configure">./configure --prefix=/usr --host=$LFS_TGT --build=$(./config.guess)</userinput></screen>

<!-- devs: if using - -build here, the build system wants to compile
     the signature file with "file" on the build system, but stops if it is not
     the same version. One possibility would be to build "file" on the build
     system first, but it is simpler to have the system think it is not
     cross-compiling, and use the just built "file". -->
    <para>Compile the package:</para>

<screen><userinput remap="make">make FILE_COMPILE=$(pwd)/build/src/file</userinput></screen>

    <para>Install the package:</para>

<screen><userinput remap="install">make DESTDIR=$LFS install</userinput></screen>

    <para>Move a shared library into its final location in the LFS system,
    and recreate the symlink for it:</para>

<screen><userinput remap="install">mv -v $LFS/usr/lib/libmagic.so.* $LFS/lib
ln -sfv ../../lib/$(readlink /usr/lib/libmagic.so) $LFS/usr/lib/libmagic.so</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>
    <para>Details on this package are located in <xref linkend="contents-file" role="."/></para>

  </sect2>

</sect1>
